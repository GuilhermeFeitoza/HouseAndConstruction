<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAY5JREFUaEPt
        mr0uREEYhpf4S0QhkQjRcAc6onEDCiUFKqtwDTQKjUg0ohI/CTfgBiQqjUYlLgEFiYQEzzvJSbbYOWfW
        HGaK70meYmZnzn7vnt3Nt5ltGEY6unA4oYMYxQLe4XcGvuM5jmFH7GFxkS98TugbFrU84SwGsYja9Ior
        2Iep0Z24QNX1iENYyS1qw6ob5UM33qBqa2qiDC3+wE/s1URmbKCCHLpRCQNYvK1yZAlV36kblWBB/olk
        QXpwHEfcKJ5kQaZR19M3YR1YkFgsiAcLEosF8WBBYrEgHmoNorZDBYZYPPF9y1yVU+ij1iDqnbTmr7xC
        H7UGUQOot0qIuhO6nn53t3u8nfvowz4jsVgQDxYkFgviwYLEYkE8WJBY1ACqdyprOzohWZC6sSC5ERyk
        H7VQbXeOLKPqO3GjCl5Qi0fdKC+2ULXtulEFl6jFOrPTCVYuTGLxIs9roooJ1GmqNlzjJq4ndhuLms4w
        mBl8QG3MyWMMOtFtRf84WMMDPErsDs6hYRi/otH4AZU7hu6zmJPaAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAAVF0AAFRdAelPZVwAAA32SURBVHhe7d1djFxlGQfwEm/U
        C8OVt94Yo1dK4pVXzO7MzjDMZ2cXup/dzS5lW0hb0PIRlSZeKAlaY1IaEUgN4Ad+hKDBYAgxKiANFgTk
        w6ggWEGhoAiWj9LW/7Pvvpvt7n/na8+7857Zf5Nfnukze857zvPOM2fO7syZLWfOnBGRNdCkiDg0KSIO
        TYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIO
        TYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIO
        TYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIOTYqIQ5Mi4tCkiDg0KSIO
        TYqIQ5Mi4tCkiDg0GYvzzz9/Tdls9uGJiYl9c3Nz101OTt42NTV1i8TF5mX79u0Hd+zYkW80GjNsHj02
        /zGgyViwQo6Ojt5er9ffwO0zki42b5i/w7i9al7Z/MeAJmOxvIC1Wm0YkRZe0mdwcHAMUQ2yHr54eBn1
        KURaaEmnoaGh99Ekv8BtNUi3rHAjIyMf9kWVvqQG6ZYV7oILLnhrWTGlz8zMzPwSkc5/DGgyFtVqddfK
        gkr/ufDCCz/D5j8GNBkLPLs8wAoq/aXRaBxl8x8DmoxFvV7/HyuoVy6XX8Gzzz3ZbPZF+LNE50W8RH5g
        fHz8OTZ/3uzs7DNs/mNAk7FgxfRqtZqdmyycp0gq0Hk0eCl9gs1/DGgyFqyYHp6VHkVcOQkSKTTBmq8G
        CoXCSTb/MaDJWLBievl83gq+aiIkTnip9S4inUu7j81/DGgyFqyYHs49/o24aiIkTmqQAFgxPTVIuqhB
        AmDF9NQg6aIGCYAV0+tFg2Qymf8iLoyP288vv0+aU4MEwIrpbVSD5PP5P+ZyuXcx3qoJLpVKbw0NDZ3I
        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
</value>
  </data>
</root>